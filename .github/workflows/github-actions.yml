name: GitHub Actions Demo
on: [pull_request]
env:
  SPACY_LANGUAGE_MODEL_NAME: en_core_web_sm-2.3.1
  SPACY_LANGUAGE_MODEL_URL: https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-2.3.1/en_core_web_sm-2.3.1.tar.gz
  PACKAGE_VERSION: $(python setup.py --version)
jobs:
  Run-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, macos-11, macos-10.15]
        python-version: ['3.6', '3.7', '3.8', '3.9']
    steps:
      - uses: actions/checkout@v2
      - uses: kenchan0130/actions-system-info@master
        id: system-info
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      - name: Check outputs
        run: |
          OUTPUTS=(
            "CPU Core: ${{ steps.system-info.outputs.cpu-core }}"
            "CPU Model: ${{ steps.system-info.outputs.cpu-model }}"
            "Hostname: ${{ steps.system-info.outputs.hostname }}"
            "Kernel release: ${{ steps.system-info.outputs.kernel-release }}"
            "Name: ${{ steps.system-info.outputs.name }}"
            "Platform: ${{ steps.system-info.outputs.platform }}"
            "Release: ${{ steps.system-info.outputs.release }}"
            "Total memory bytes: ${{ steps.system-info.outputs.totalmem }}"
          )
          IS_EMPTY_OUTOUT=false
          for OUTPUT in "${OUTPUTS[@]}";do
            echo "${OUTPUT}"
            OUT=$(echo ${OUTPUT} | cut -d ':' -f2- | xargs)
            if [[ -z "${OUT}" ]];then
              IS_EMPTY_OUTOUT=true
            fi
          done
          if "$IS_EMPTY_OUTOUT";then
            exit 1
          fi
      - run: python --version
      - run: pip --version
      - run: pip install wheel
      - run: python setup.py bdist_wheel
      - run: |
          if [ ${{ matrix.python-version }} == '3.9' ];
          then
            pip install dist/dataqa-${{ env.PACKAGE_VERSION }}-py3-none-any.whl --use-deprecated=legacy-resolver
          else
            pip install dist/dataqa-${{ env.PACKAGE_VERSION }}-py3-none-any.whl
          fi
      - run: pip show dataqa
      - run: |
          SITE_PACKAGES=$(python -c 'import site; print(site.getsitepackages()[0])')
          ls ${SITE_PACKAGES}/dataqa/nlp/
          wget ${{ env.SPACY_LANGUAGE_MODEL_URL }} -O ${SITE_PACKAGES}/dataqa/nlp/${{ env.SPACY_LANGUAGE_MODEL_NAME }}.tar.gz
      - run: dataqa test